public class NestedArraysIterator<T> {
    private var items: [T] = []
    
    init(array: [T]) {
        self.flatten(array)
    }
    
    private func flatten(_ array: [T]) {
        for element in array {
            if let nestedArray = element as? [T] {
                flatten(nestedArray)
            } else {
                items.append(element)
            }
        }
    }
    
    func next() -> T? {
        guard !items.isEmpty else {
            return nil
        }
        return items.removeFirst()
    }
    
    func allItems() -> [T] {
        return items
    }
}

// Example usage:
let nestedArray: [Any] = [1, [2, 3], [4, [5, 6, [7, 8, [[9], [10]]]]]]
let iterator = NestedArraysIterator(array: nestedArray)

while let element = iterator.next() {
    print(element, terminator: " ")
}

// Access all items at once
let allItems = iterator.allItems()
print("\nAll Items:", allItems)
