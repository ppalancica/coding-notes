class Solution {
    func isAnagramV1(_ s: String, _ t: String) -> Bool {
        if s.count != t.count { return false }
        
        var sDict: [Character: Int] = [:]
        var tDict: [Character: Int] = [:]

        for symbol in s {
            if let occurences = sDict[symbol] {
                sDict[symbol] = occurences + 1
            } else {
                sDict[symbol] = 1
            }
        }

        for symbol in t {
            if let occurences = tDict[symbol] {
                tDict[symbol] = occurences + 1
            } else {
                tDict[symbol] = 1
            }
        }
        
        if sDict.keys.count != tDict.keys.count { return false }

        for key in sDict.keys {
            if sDict[key] != tDict[key] {
                return false
            }
        }

        return true
    }

    func isAnagram(_ s: String, _ t: String) -> Bool {
        if s.count != t.count { return false }
        
        var sDict: [Character: Int] = [:]
        var tDict: [Character: Int] = [:]

        for symbol in s {
            sDict[symbol] = (sDict[symbol] ?? 0) + 1
        }

        for symbol in t {
            tDict[symbol] = (tDict[symbol] ?? 0) + 1
        }
        
        if sDict.keys.count != tDict.keys.count { return false }    

        return sDict.keys.allSatisfy { sDict[$0] == tDict[$0] }
    }
}