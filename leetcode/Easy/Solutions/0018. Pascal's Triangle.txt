class Solution {
    func generate(_ numRows: Int) -> [[Int]] {
        guard numRows > 0 else { return [] }

        if numRows == 1 { return [[1]] }

        var trianle: [[Int]] = []
        trianle.reserveCapacity(numRows)
        trianle.append([1]) // Row 0 is the Top Row and we can directly set it to [1]

        for i in 1..<numRows {
            var row: [Int] = [1]
            let prevRow = trianle[i - 1]

            for j in 1..<prevRow.count {
                let sum = prevRow[j - 1] + prevRow[j]
                row.append(sum)
            }

            row.append(1)
            trianle.append(row)
        }

        return trianle
    }
}