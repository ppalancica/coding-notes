Brute Force

O(sqrt(n))

class Solution {
    func isPerfectSquare(_ num: Int) -> Bool {
        for i in 1...num {
            if i * i == num { return true }
            if i * i > num { return false }
        }

        return false
    }
}

Binary Search optimized solution

O(log n)

func isPerfectSquare(_ num: Int) -> Bool {
    var left = 1
    var right = num

    while left <= right {
        let mid = left + (right - left) / 2
        let square = mid * mid
    
        if square == num {
            return true
        } else if square < num {
           left = mid + 1
        } else {
           right = mid - 1
        }
    }

   return false
}